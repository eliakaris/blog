# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '4ee9e27e-1f60-4ff3-b12f-f24ffe8da704'
  imageRepository: 'eliakarisblog'
  containerRegistry: 'nextline.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'nextline1592d9cd-auth'

stages:
- stage: PR_Build
  condition: eq(variables['Build.Reason'], 'PullRequest')
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      name: Default
    steps:
    - task: Bash@3
      displayName: Down services
      inputs:
        targetType: inline
        script: docker-compose down
    - task: Bash@3
      displayName: Build and run service
      inputs:
        targetType: inline
        script: docker-compose up -d --build
    - task: Bash@3
      displayName: Wait for services
      inputs:
        targetType: inline
        script: sleep 3s
    - task: Bash@3
      displayName: Run tests
      inputs:
        targetType: inline
        script: docker-compose exec -T integration-tests yarn test
    - task: Bash@3
      displayName: Copy test files
      condition: always()
      inputs:
        targetType: inline
        script: docker cp $( docker-compose ps -q integration-tests):/usr/src/app/.output/ .
    - task: Bash@3
      displayName: Down services
      condition: always()
      inputs:
        targetType: inline
        script: docker-compose down
    - task: PublishTestResults@2
      displayName: Publish integration test results
      condition: always()
      inputs:
        testResultsFormat: xUnit
        testResultsFiles: .output/*.log

- stage: Build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      name: Default
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: Default
    environment: 'eliakarisblog-8596.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

